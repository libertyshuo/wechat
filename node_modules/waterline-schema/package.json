{
  "_args": [
    [
      {
        "raw": "waterline-schema@~0.2.1",
        "scope": null,
        "escapedName": "waterline-schema",
        "name": "waterline-schema",
        "rawSpec": "~0.2.1",
        "spec": ">=0.2.1 <0.3.0",
        "type": "range"
      },
      "/home/lishuo/PycharmProjects/coding/wechat/node_modules/waterline"
    ]
  ],
  "_cnpm_publish_time": 1488910375123,
  "_from": "waterline-schema@~0.2.1",
  "_hasShrinkwrap": false,
  "_id": "waterline-schema@0.2.2",
  "_location": "/waterline-schema",
  "_nodeVersion": "4.4.7",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/waterline-schema-0.2.2.tgz_1488910374439_0.7381256790831685"
  },
  "_npmUser": {
    "name": "particlebanana",
    "email": "particlebanana@gmail.com"
  },
  "_npmVersion": "2.15.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "waterline-schema@~0.2.1",
    "scope": null,
    "escapedName": "waterline-schema",
    "name": "waterline-schema",
    "rawSpec": "~0.2.1",
    "spec": ">=0.2.1 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/waterline"
  ],
  "_resolved": "http://registry.npm.taobao.org/waterline-schema/download/waterline-schema-0.2.2.tgz",
  "_shasum": "3a5af0d795e5c23b080fbb0b99f9d00a5e407a4c",
  "_shrinkwrap": null,
  "_spec": "waterline-schema@~0.2.1",
  "_where": "/home/lishuo/PycharmProjects/coding/wechat/node_modules/waterline",
  "bugs": {
    "url": "https://github.com/balderdashy/waterline-schema/issues/new"
  },
  "contributors": [
    {
      "name": "particlebanana"
    }
  ],
  "dependencies": {
    "lodash": "3.10.1"
  },
  "description": "The core schema builder used in the Waterline ORM.",
  "devDependencies": {
    "mocha": "2.4.5"
  },
  "directories": {},
  "dist": {
    "shasum": "3a5af0d795e5c23b080fbb0b99f9d00a5e407a4c",
    "size": 13690,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/waterline-schema/download/waterline-schema-0.2.2.tgz"
  },
  "engines": {
    "node": "*"
  },
  "gitHead": "152411229d24772be8699ccc230e5d781ff214a1",
  "homepage": "http://github.com/balderdashy/waterline-schema",
  "keywords": [
    "mvc",
    "sails",
    "sailsjs",
    "sails.js",
    "orm",
    "waterline",
    "active-record"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/balderdashy/waterline-schema/blob/master/LICENSE.md"
    }
  ],
  "main": "lib/waterline-schema.js",
  "maintainers": [
    {
      "name": "balderdashy",
      "email": "mike@balderdash.co"
    },
    {
      "name": "mikermcneil",
      "email": "michael.r.mcneil@gmail.com"
    },
    {
      "name": "particlebanana",
      "email": "particlebanana@gmail.com"
    },
    {
      "name": "sgress454",
      "email": "scott@balderdash.co"
    }
  ],
  "name": "waterline-schema",
  "optionalDependencies": {},
  "publish_time": 1488910375123,
  "readme": "Waterline Schema\n====================\n[![Build Status](https://travis-ci.org/balderdashy/waterline-schema.svg?branch=master)](https://travis-ci.org/balderdashy/waterline-schema)\n[![npm version](https://badge.fury.io/js/waterline-schema.svg)](http://badge.fury.io/js/waterline-schema)\n[![Dependency Status](https://david-dm.org/balderdashy/waterline-schema.svg)](https://david-dm.org/balderdashy/waterline-schema)\n\nThis is the core schema builder used in the Waterline ORM. It is responsible for taking an\nattributes object from a Collection and turning it into a fully fledged schema object.\n\nIt's mainly tasked with figuring out and expanding associations between Collections.\n\n## Schema Format\n\nA Waterline schema is a javascript object that maps to a generalized database schema format.\nAn adapter should be able to take it and build out a schema definition including join tables in\na relational database.\n\n#### Belongs To\n\nBelongs to relationships are defined by adding a property to a collection's attributes with a\n`model` property that points to another collection.\n\n```javascript\nattributes: {\n  user: { model: 'user' }\n}\n```\n\nShould create the following after being run through the schema.\n\n```javascript\nattributes: {\n  user: {\n    columnName: 'user_id',\n    type: 'integer',\n    foreignKey: true,\n    references: 'user',\n    on: 'id'\n  }\n}\n```\n\n#### Has Many\n\nHas many relationships are defined by adding a property to a collection's attributes with a\n`collection` property that points to another collection. This isn't used for the actual database\nstructure in a relational system but could be helpful in a nosql database. It is also used\ninternally inside of Waterline. A `via` key is required to point to a foriegn key.\n\n```javascript\nattributes: {\n  users: {\n    collection: 'user',\n    via: 'foo'\n  }\n}\n```\n\nShould create the following after being run through the schema.\n\n```javascript\nattributes: {\n  users: {\n    collection: 'user',\n    references: 'user',\n    on: 'user_id',\n    via: 'foo'\n  }\n}\n```\n\n#### Many To Many\n\nMany To Many relationships are defined by adding a `collection` property on two Collections that\npoint to each other. This will create an additional collection in the schema that maps out the\nrelationship between the two. It will rewrite the foreign keys on the two collections to\nreference the new join collections. A `via` key is required on both so that the relationships can\nbe properly mapped.\n\n```javascript\n// Foo Collection\nattributes: {\n  bars: {\n    collection: 'bar',\n    via: 'foos'\n  }\n}\n\n// Bar Collection\nattributes: {\n  foos: {\n    collection: 'foo',\n    via: 'bars'\n  }\n}\n```\n\nShould create the following after being run through the schema.\n\n```javascript\n// Foo Collection\nattributes: {\n  id: {\n    type: 'integer',\n    autoIncrement: true,\n    primaryKey: true,\n    unique: true\n  },\n  bars: {\n    collection: 'bar_foos__foo_bars',\n    references: 'bar_foos__foo_bars',\n    on: 'foo__bars',\n    via: 'bar_foos'\n  }\n}\n\n// Bar Collection\nattributes: {\n  id: {\n    type: 'integer',\n    autoIncrement: true,\n    primaryKey: true,\n    unique: true\n  },\n  foos: {\n    collection: 'bar_foos__foo_bars',\n    references: 'bar_foos__foo_bars',\n    on: 'bar_foos',\n    via: 'foo_bars'\n  }\n}\n\n// bar_foos__foo_bars Collection\nattributes: {\n  bar_foos: {\n    columnName: 'bar_foos',\n    type: 'integer',\n    foreignKey: true,\n    references: 'bar',\n    on: 'id',\n    groupKey: 'bar'\n  },\n  foo_bars: {\n    columnName: 'foo_bars',\n    type: 'integer',\n    foreignKey: true,\n    references: 'foo',\n    on: 'id',\n    groupKey: 'foo'\n  }\n}\n```\n\n\n## Contributing\n\nBefore submitting a pull request, please make sure the `waterline-schema` tests pass, as well as [the tests](https://github.com/balderdashy/waterline#tests) in `waterline` core (use `npm link`)\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/balderdashy/waterline-schema.git"
  },
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha test --recursive"
  },
  "version": "0.2.2"
}
